/* use this to call GCF to leverage AUTH & browser caching
  AUTH - all calls to GCF require a urlParam named cypherKey - which is generated by the current page URL route parameter q
  CACHE - all GET calls to GCF will be cached by {{z}}_{{method}}_{{cypherKey}}
*/
var API = {};

API.init = function() {
  // solve for z (url param)
  var paramSplit1 = location.href.split('?');
  var paramSplit2 = (paramSplit1[1]) ? paramSplit1[1].split('&') : [];
  API.z = (paramSplit2[0]) ? paramSplit2[0].split('=')[1] : null;
  // check for auth stored
  if (localStorage) API.zKey = localStorage.getItem(`key_${API.z}`);
}

API.call = function(options) {
  /* args:
    httpMethod, // POST GET...
    method, // GCF function name
    params, // ?asdf=1234
    package, // obj to be passed into POST as JSON
    onSuccess, // executed after success
    onFailure // executed after failure
  */
  if (!options.httpMethod) options.httpMethod = 'GET';
  if (!options.method) throw new Error('needs method');
  // 1. check the browser cache

  // 2. check the browser for a auth key

  // 3. make the call
  var callURL = `https://us-central1-custom-family-gifts.cloudfunctions.net/v2-call?cypherKey=${API.zKey || API.z}&method=${options.method}`;
  console.log(callURL);
  $.ajax(callURL,{
    method: `${options.httpMethod}`,
    headers: (options.httpMethod == 'GET') ? {} : { "Content-Type": "application/json" }
  }).done(function(res) {
    console.log(res);
    console.log('donezies');
  });
};

API.saveCache = function(method) {
  if (!localStorage) return;
  localStorage.setItem(`${method}_${cypherKey}`)
}

API.getCache = function(method) {
  if (!localStorage) return;
}

API.clearCache = function() {
  if (!localStorage) return;
}

API.init();
API.call({
  method: 'testEndpoint'
})
